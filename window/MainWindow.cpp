#include "MainWindow.h"
#include "ui_MainWindow.h"

#include <QMessageBox>
#include <iostream>
#include <QDebug>
#include <math.h>

const double test_data[] = 
{
	-2327
	,-1635
	,-2199
	,-2191
	,-2044
	,-1903
	,-2480
	,-1925
	,-1952
	,-2164
	,-2528
	,-2433
	,-2398
	,-1405
	,-2071
	,-2405
	,-1850
	,-2140
	,-2308
	,-2204
	,-1922
	,-2462
	,-2188
	,-1979
	,-2157
	,-2599
	,-2236
	,-2931
	,-1251
	,-2055
	,-2386
	,-2036
	,-2017
	,-2379
	,-2240
	,-1983
	,-2327
	,-2368
	,-1986
	,-2124
	,-2514
	,-2267
	,-3098
	,-1339
	,-1932
	,-2289
	,-2235
	,-1866
	,-2395
	,-2246
	,-2047
	,-2165
	,-2477
	,-1961
	,-2050
	,-2367
	,-2371
	,-2945
	,-1693
	,-1742
	,-2159
	,-2426
	,-1741
	,-2320
	,-2274
	,-2111
	,-2003
	,-2565
	,-1978
	,-2011
	,-2233
	,-2572
	,-2532
	,-2320
	,-1482
	,-2117
	,-2445
	,-1861
	,-2195
	,-2329
	,-2220
	,-1935
	,-2502
	,-2180
	,-2016
	,-2196
	,-2643
	,-2300
	,-2909
	,-1295
	,-2095
	,-2422
	,-2043
	,-2065
	,-2388
	,-2255
	,-1982
	,-2362
	,-2353
	,-1980
	,-2128
	,-2540
	,-2273
	,-3131
	,-1332
	,-1966
	,-2317
	,-2209
	,-1888
	,-2394
	,-2235
	,-2033
	,-2195
	,-2492
	,-1991
	,-2088
	,-2408
	,-2360
	,-2989
	,-1639
	,-1796
	,-2199
	,-2424
	,-1774
	,-2362
	,-2301
	,-2131
	,-2052
	,-2591
	,-2003
	,-2068
	,-2283
	,-2594
	,-2623
	,-2242
	,-1544
	,-2132
	,-2460
	,-1849
	,-2232
	,-2343
	,-2228
	,-1953
	,-2532
	,-2155
	,-2017
	,-2203
	,-2651
	,-2315
	,-2851
	,-1296
	,-2093
	,-2419
	,-2004
	,-2080
	,-2381
	,-2250
	,-1968
	,-2377
	,-2320
	,-1972
	,-2127
	,-2546
	,-2250
	,-3075
	,-1277
	,-1965
	,-2306
	,-2151
	,-1888
	,-2367
	,-2219
	,-1995
	,-2191
	,-2432
	,-1951
	,-2053
	,-2402
	,-2329
	,-3027
	,-1562
	,-1808
	,-2195
	,-2376
	,-1757
	,-2345
	,-2252
	,-2091
	,-2058
	,-2568
	,-1979
	,-2038
	,-2278
	,-2539
	,-2675
	,-2140
	,-1617
	,-2178
	,-2522
	,-1888
	,-2322
	,-2391
	,-2255
	,-1965
	,-2479
	,-1949
	,-1741
	,-1844
	,-2202
	,-1856
	,-2204
	,-684
	,-1383
	,-1654
	,-1196
	,-1354
	,-1698
	,-1683
	,-1526
	,-2076
	,-2069
	,-1796
	,-1976
	,-2423
	,-2053
	,-3004
	,-1190
	,-1880
	,-2245
	,-2128
	,-1858
	,-2355
	,-2210
	,-2012
	,-2192
	,-2444
	,-1955
	,-2069
	,-2414
	,-2352
	,-3022
	,-1617
	,-1843
	,-2239
	,-2441
	,-1810
	,-2395
	,-2308
	,-2139
	,-2084
	,-2597
	,-1998
	,-2061
	,-2290
	,-2552
	,-2653
	,-2194
	,-1574
	,-2145
	,-2479
	,-1856
	,-2276
	,-2379
	,-2275
	,-2036
	,-2635
	,-2235
	,-2128
	,-2335
	,-2785
	,-2477
	,-2962
	,-1486
	,-2286
	,-2609
	,-2180
	,-2280
	,-2564
	,-2426
	,-2147
	,-2573
	,-2484
	,-2140
	,-2307
	,-2728
	,-2399
	,-3231
	,-1433
	,-2141
	,-2475
	,-2287
	,-2054
	,-2510
	,-2351
	,-2123
	,-2339
	,-2550
	,-2073
	,-2191
	,-2541
	,-2433
	,-3172
	,-1657
	,-1954
	,-2335
	,-2488
	,-1904
	,-2496
	,-2384
	,-2217
	,-2205
	,-2700
	,-2108
	,-2187
	,-2422
	,-2657
	,-2835
	,-2204
	,-1734
	,-2257
	,-2580
	,-1922
	,-2373
	,-2427
	,-2296
	,-2064
	,-2661
	,-2197
	,-2101
	,-2288
	,-2723
	,-2439
	,-2775
	,-1386
	,-2147
	,-2458
	,-1989
	,-2137
	,-2382
	,-2248
	,-1965
	,-2424
	,-2291
	,-1984
	,-2154
	,-2577
	,-2224
	,-3065
	,-1252
	,-1998
	,-2342
	,-2121
	,-1941
	,-2386
	,-2237
	,-2001
	,-2249
	,-2421
	,-1959
	,-2084
	,-2439
	,-2292
	,-3058
	,-1467
	,-1862
	,-2240
	,-2331
	,-1800
	,-2375
	,-2247
	,-2074
	,-2096
	,-2539
	,-1966
	,-2040
	,-2310
	,-2469
	,-2758
	,-1945
	,-1624
	,-2112
	,-2426
	,-1751
	,-2246
	,-2275
	,-2130
	,-1928
	,-2521
	,-2008
	,-1944
	,-2149
	,-2561
	,-2330
	,-2543
	,-1281
	,-2023
	,-2336
	,-1837
	,-2041
	,-2270
	,-2148
	,-1865
	,-2356
	,-2168
	,-1894
	,-2076
	,-2511
	,-2149
	,-2975
	,-1182
	,-1963
	,-2306
	,-2038
	,-1919
	,-2333
	,-2178
	,-1938
	,-2221
	,-2344
	,-1904
	,-2036
	,-2407
	,-2220
	,-3013
	,-1343
	,-1817
	,-2195
	,-2227
	,-1752
	,-2316
	,-2171
	,-1985
	,-2045
	,-2459
	,-1894
	,-1968
	,-2258
	,-2374
	,-2766
	,-1790
	,-1609
	,-2071
	,-2373
	,-1675
	,-2211
	,-2215
	,-2055
	,-1887
	,-2490
	,-1941
	,-1935
	,-2128
	,-2529
	,-2364
	,-2449
	,-1295
	,-2006
	,-2330
	,-1791
	,-2048
	,-2241
	,-2122
	,-1834
	,-2362
	,-2128
	,-1878
	,-2063
	,-2519
	,-2161
	,-2903
	,-1152
	,-1956
	,-2295
	,-1974
	,-1903
	,-2291
	,-2147
	,-1892
	,-2208
	,-2281
	,-1866
	,-2003
	,-2395
	,-2160
	,-3030
	,-1259
	,-1801
	,-2181
	,-2154
	,-1739
	,-2299
	,-2142
	,-1953
	,-2044
	,-2408
	,-1865
	,-1942
	,-2254
	,-2319
	,-2811
	,-1651
	,-1596
	,-2043
	,-2327
	,-1636
	,-2209
	,-2190
	,-2019
	,-1882
	,-2471
	,-1895
	,-1915
	,-2129
	,-2489
	,-2404
	,-2330
	,-1308
	,-1997
	,-2321
	,-1747
	,-2062
	,-2240
	,-2112
	,-1814
	,-2364
	,-2077
	,-1858
	,-2041
	,-2502
	,-2135
	,-2822
	,-1094
	,-1911
	,-2256
	,-1897
	,-1891
	,-2262
	,-2101
	,-1826
	,-2194
	,-2234
	,-1833
	,-1969
	,-2385
	,-2138
	,-3003
	,-1186
	,-1790
	,-2176
	,-2087
	,-1725
	,-2268
	,-2101
	,-1895
	,-2036
	,-2367
	,-1837
	,-1915
	,-2250
	,-2273
	,-2874
	,-1552
	,-1604
	,-2042
	,-2288
	,-1600
	,-2202
	,-2148
	,-1961
	,-1862
	,-2432
	,-1836
	,-1877
	,-2095
	,-2430
	,-2329
	,-2325
	,-1239
	,-1959
	,-2294
	,-1737
	,-2034
	,-2229
	,-2091
	,-1795
	,-2343
	,-2074
	,-1844
	,-2031
	,-2502
	,-2140
	,-2883
	,-1088
	,-1925
	,-2285
	,-1931
	,-1922
	,-2316
	,-2160
	,-1909
	,-2287
	,-2354
	,-1925
	,-2038
	,-2429
	,-2144
	,-2899
	,-978
	,-1477
	,-1797
	,-1657
	,-1214
	,-1701
	,-1447
	,-1190
	,-1315
	,-1710
	,-1236
	,-1425
	,-1870
	,-2009
	,-2658
	,-1405
	,-1446
	,-1924
	,-2187
	,-1509
	,-2122
	,-2087
	,-1910
	,-1811
	,-2415
	,-1829
	,-1870
	,-2096
	,-2444
	,-2423
	,-2215
	,-1277
	,-1971
	,-2306
	,-1720
	,-2082
	,-2238
	,-2111
	,-1829
	,-2422
	,-2099
	,-1898
	,-2088
	,-2565
	,-2217
	,-2858
	,-1131
	,-1976
	,-2333
	,-1934
	,-1965
	,-2329
	,-2151
	,-1870
	,-2279
	,-2298
	,-1918
	,-2063
	,-2508
	,-2248
	,-3154
	,-1271
	,-1947
	,-2363
	,-2218
	,-1923
	,-2482
	,-2297
	,-2076
	,-2259
	,-2580
	,-2046
	,-2117
	,-2478
	,-2475
	,-3128
	,-1680
	,-1816
	,-2270
	,-2474
	,-1810
	,-2433
	,-2350
	,-2135
	,-2062
	,-2637
	,-2020
	,-2051
	,-2282
	,-2602
	,-2659
	,-2253
	,-1466
	,-2116
	,-2439
	,-1806
	,-2220
	,-2335
	,-2177
	,-1894
	,-2514
	,-2129
	,-1951
	,-2144
	,-2619
	,-2299
	,-2841
	,-1183
	,-2039
	,-2389
	,-1937
	,-2033
	,-2364
	,-2187
	,-1889
	,-2336
	,-2294
	,-1919
	,-2051
	,-2507
	,-2235
	,-3126
	,-1174
	,-1879
	,-2277
	,-2072
	,-1825
	,-2343
	,-2141
	,-1896
	,-2115
	,-2393
	,-1868
	,-1945
	,-2305
	,-2248
	,-2986
	,-1410
	,-1650
	,-2108
	,-2253
	,-1636
	,-2268
	,-2151
	,-1944
	,-1913
	,-2461
	,-1844
	,-1893
	,-2144
	,-2431
	,-2590
	,-1994
	,-1380
	,-2013
	,-2330
	,-1665
	,-2135
	,-2231
	,-2063
	,-1806
	,-2440
	,-2003
	,-1849
	,-2052
	,-2548
	,-2270
	,-2697
	,-1114
	,-1972
	,-2326
	,-1843
	,-1993
	,-2302
	,-2127
	,-1826
	,-2300
	,-2207
	,-1857
	,-1992
	,-2451
	,-2133
	,-3039
	,-1042
	,-1812
	,-2214
	,-1973
	,-1772
	,-2261
	,-2059
	,-1809
	,-2057
	,-2279
	,-1785
	,-1871
	,-2257
	,-2157
	,-2966
	,-1274
	,-1621
	,-2088
	,-2190
	,-1624
	,-2263
	,-2129
	,-1923
	,-1926
	,-2433
	,-1834
	,-1878
	,-2155
	,-2392
	,-2673
	,-1870
	,-1395
	,-2004
	,-2318
	,-1634
	,-2152
	,-2200
	,-2021
	,-1790
	,-2447
	,-1960
	,-1841
	,-2042
	,-2521
	,-2297
	,-2582
	,-1101
	,-1946
	,-2294
	,-1760
	,-1975
	,-2247
	,-2066
	,-1753
	,-2283
	,-2148
	,-1810
	,-1952
	,-2446
	,-2124
	,-2985
	,-1010
	,-1832
	,-2237
	,-1932
	,-1806
	,-2286
	,-2086
	,-1815
	,-2123
	,-2311
	,-1823
	,-1898
	,-2336
	,-2228
	,-3064
	,-1251
	,-1687
	,-2156
	,-2180
	,-1672
	,-2301
	,-2123
	,-1905
	,-1961
	,-2444
	,-1852
	,-1876
	,-2180
	,-2367
	,-2770
	,-1761
	,-1444
	,-2024
	,-2323
	,-1608
	,-2181
	,-2197
	,-2007
	,-1816
	,-2472
	,-1928
	,-1839
	,-2055
	,-2528
	,-2370
	,-2495
	,-1139
	,-1963
	,-2303
	,-1740
	,-2004
	,-2240
	,-2063
	,-1751
	,-2306
	,-2109
	,-1809
	,-1959
	,-2461
	,-2128
	,-2951
	,-979
	,-1833
	,-2242
	,-1882
	,-1822
	,-2281
	,-2078
	,-1792
	,-2128
	,-2264
	,-1795
	,-1880
	,-2330
	,-2133
	,-3070
	,-1223
	,-1626
	,-2104
	,-2151
	,-1616
	,-2270
	,-2101
	,-1882
	,-1910
	,-2403
	,-1792
	,-1829
	,-2127
	,-2359
	,-2725
	,-1788
	,-1377
	,-1971
	,-2273
	,-1572
	,-2143
	,-2172
	,-1976
	,-1775
	,-2444
	,-1920
	,-1835
	,-2036
	,-2501
	,-2315
	,-2533
	,-1084
	,-1942
	,-2295
	,-1746
	,-2010
	,-2261
	,-2079
	,-1767
	,-2315
	,-2136
	,-1825
	,-1975
	,-2488
	,-2177
	,-3042
	,-1043
	,-1915
	,-2345
	,-2013
	,-1915
	,-2381
	,-2124
	,-1783
	,-2033
	,-2114
	,-1558
	,-1556
	,-1942
	,-1753
	,-2573
	,-605
	,-1023
	,-1492
	,-1502
	,-1102
	,-1854
	,-1757
	,-1631
	,-1783
	,-2283
	,-1701
	,-1735
	,-2066
	,-2248
	,-2735
	,-1614
	,-1373
	,-1966
	,-2273
	,-1568
	,-2173
	,-2162
	,-1955
	,-1783
	,-2462
	,-1898
	,-1848
	,-2067
	,-2531
	,-2423
	,-2481
	,-1177
	,-2020
	,-2364
	,-1781
	,-2099
	,-2331
	,-2145
	,-1821
	,-2419
	,-2200
	,-1894
	,-2046
	,-2595
	,-2296
	,-3086
	,-1083
	,-1964
	,-2385
	,-2004
	,-1987
	,-2440
	,-2226
	,-1939
	,-2337
	,-2484
	,-2027
	,-2106
	,-2564
	,-2390
	,-3353
	,-1349
	,-1917
	,-2401
	,-2321
	,-1907
	,-2550
	,-2323
	,-2089
	,-2200
	,-2632
	,-2043
	,-2079
	,-2406
	,-2526
	,-3089
	,-1783
	,-1653
	,-2213
	,-2461
	,-1739
	,-2382
	,-2335
	,-2110
	,-1969
	,-2636
	,-2032
	,-1990
	,-2210
	,-2647
	,-2591
	,-2480
	,-1305
	,-2109
	,-2453
	,-1839
	,-2191
	,-2388
	,-2202
	,-1877
	,-2493
	,-2212
	,-1943
	,-2093
	,-2624
	,-2308
	,-3054
	,-1072
	,-1962
	,-2364
	,-1937
	,-1965
	,-2379
	,-2151
	,-1850
	,-2254
	,-2331
	,-1887
	,-1957
	,-2419
	,-2204
	,-3157
	,-1097
	,-1736
	,-2212
	,-2074
	,-1724
	,-2345
	,-2109
	,-1880
	,-2039
	,-2429
	,-1866
	,-1895
	,-2253
	,-2328
	,-3000
	,-1536
	,-1546
	,-2095
	,-2321
	,-1618
	,-2293
	,-2224
	,-1994
	,-1887
	,-2543
	,-1918
	,-1897
	,-2126
	,-2559
	,-2590
	,-2302
	,-1266
	,-2029
	,-2366
	,-1723
	,-2145
	,-2297
	,-2118
	,-1812
	,-2466
	,-2135
	,-1892
	,-2053
	,-2588
	,-2292
	,-2949
	,-1043
	,-1969
	,-2363
	,-1886
	,-1975
	,-2372
	,-2137
	,-1818
	,-2261
	,-2281
	,-1858
	,-1933
	,-2430
	,-2199
	,-3175
	,-1062
	,-1763
	,-2242
	,-2056
	,-1763
	,-2366
	,-2126
	,-1876
	,-2076
	,-2420
	,-1874
	,-1913
	,-2294
	,-2319
	,-3073
	,-1449
	,-1585
	,-2125
	,-2297
	,-1629
	,-2319
	,-2208
	,-1963
	,-1904
	,-2540
	,-1905
	,-1894
	,-2134
	,-2517
	,-2645
	,-2147
	,-1293
	,-2033
	,-2357
	,-1688
	,-2161
	,-2275
	,-2075
	,-1779
	,-2474
	,-2085
	,-1861
	,-2030
	,-2574
	,-2312
	,-2843
	,-1027
	,-1965
	,-2351
	,-1848
	,-1993
	,-2350
	,-2128
	,-1799
	,-2304
	,-2277
	,-1885
	,-1963
	,-2475
	,-2229
	,-3204
	,-1051
	,-1820
	,-2289
	,-2038
	,-1818
	,-2387
	,-2142
	,-1876
	,-2128
	,-2439
	,-1900
	,-1927
	,-2333
	,-2325
	,-3149
	,-1392
	,-1636
	,-2173
	,-2271
	,-1650
	,-2355
	,-2202
	,-1966
	,-1947
	,-2557
	,-1915
	,-1893
	,-2156
	,-2512
	,-2736
	,-2012
	,-1334
	,-2031
	,-2348
	,-1648
	,-2178
	,-2258
	,-2052
	,-1776
	,-2477
	,-2031
	,-1857
	,-2027
	,-2555
	,-2234
	,-2910
	,-992
	,-1922
	,-2317
	,-1812
	,-1953
	,-2327
	,-2094
	,-1781
	,-2269
	,-2273
	,-1856
	,-1931
	,-2434
	,-2192
	,-3157
	,-1010
	,-1757
	,-2239
	,-1993
	,-1751
	,-2344
	,-2088
	,-1830
	,-2072
	,-2415
	,-1857
	,-1872
	,-2286
	,-2315
	,-3107
	,-1389
	,-1589
	,-2139
	,-2280
	,-1649
	,-2361
	,-2232
	,-1993
	,-1963
	,-2589
	,-1951
	,-1947
	,-2204
	,-2592
	,-2773
	,-2164
	,-1381
	,-2102
	,-2427
	,-1745
	,-2241
	,-2336
	,-2132
	,-1858
	,-2558
	,-2147
	,-1969
	,-2144
	,-2680
	,-2437
	,-2946
	,-1106
	,-2013
	,-2330
	,-1725
	,-1832
	,-2097
	,-1811
	,-1445
	,-1894
	,-1777
	,-1325
	,-1366
	,-1893
	,-1668
	,-2719
	,-653
	,-1566
	,-2129
	,-1927
	,-1757
	,-2334
	,-2093
	,-1834
	,-2120
	,-2429
	,-1898
	,-1933
	,-2357
	,-2335
	,-3202
	,-1389
	,-1684
	,-2232
	,-2307
	,-1719
	,-2433
	,-2261
	,-2032
	,-2039
	,-2649
	,-2016
	,-2002
	,-2285
	,-2641
	,-2920
	,-2109
	,-1497
	,-2185
	,-2497
	,-1792
	,-2345
	,-2398
	,-2187
	,-1937
	,-2659
	,-2188
	,-2029
	,-2211
	,-2744
	,-2546
	,-2930
	,-1242
	,-2193
	,-2582
	,-2043
	,-2278
	,-2581
	,-2370
	,-2048
	,-2617
	,-2512
	,-2135
	,-2231
	,-2784
	,-2525
	,-3430
	,-1266
	,-2100
	,-2554
	,-2222
	,-2091
	,-2619
	,-2368
	,-2089
	,-2390
	,-2618
	,-2103
	,-2135
	,-2570
	,-2480
	,-3385
	,-1455
	,-1866
	,-2394
	,-2418
	,-1887
	,-2586
	,-2386
	,-2147
	,-2188
	,-2728
	,-2109
	,-2104
	,-2401
	,-2655
	,-3060
	,-2046
	,-1619
	,-2275
	,-2566
	,-1841
	,-2444
	,-2453
	,-2235
	,-2019
	,-2739
	,-2198
	,-2068
	,-2253
	,-2780
	,-2638
	,-2816
	,-1281
	,-2175
	,-2533
	,-1951
	,-2230
	,-2486
	,-2274
	,-1944
	,-2526
	,-2347
	,-2020
	,-2132
	,-2671
	,-2377
	,-3249
	,-1131
	,-2018
	,-2463
	,-2102
	,-2034
	,-2534
	,-2290
	,-1991
	,-2345
	,-2519
	,-2039
	,-2081
	,-2540
	,-2392
	,-3356
	,-1345
	,-1863
	,-2386
	,-2336
	,-1879
	,-2556
	,-2328
	,-2102
	,-2193
	,-2689
	,-2081
	,-2074
	,-2410
	,-2605
	,-3120
	,-1906
	,-1661
	,-2268
	,-2555
	,-1831
	,-2464
	,-2438
	,-2203
	,-2038
	,-2736
	,-2155
	,-2086
	,-2285
	,-2750
	,-2661
	,-2686
	,-1314
	,-2173
	,-2530
	,-1932
	,-2251
	,-2469
	,-2257
	,-1930
	,-2544
	,-2301
	,-2004
	,-2145
	,-2682
	,-2370
	,-3188
	,-1132
	,-2046
	,-2475
	,-2066
	,-2065
	,-2527
	,-2292
	,-2004
	,-2397
	,-2521
	,-2050
	,-2110
	,-2594
	,-2430
	,-3379
	,-1329
	,-1925
	,-2418
	,-2328
	,-1929
	,-2584
	,-2345
	,-2102
	,-2232
	,-2667
	,-2082
	,-2096
	,-2446
	,-2560
	,-3190
	,-1820
	,-1713
	,-2288
	,-2538
	,-1824
	,-2490
	,-2430
	,-2209
	,-2075
	,-2748
	,-2130
	,-2094
	,-2306
	,-2745
	,-2713
	,-2559
	,-1393
	,-2210
	,-2545
	,-1915
	,-2300
	,-2475
	,-2296
	,-1980
	,-2623
	,-2338
	,-2062
	,-2220
	,-2768
	,-2462
	,-3185
	,-1212
	,-2136
	,-2544
	,-2124
	,-2162
	,-2584
	,-2352
	,-2049
	,-2475
	,-2535
	,-2102
	,-2177
	,-2657
	,-2443
	,-3423
	,-1329
	,-1979
	,-2455
	,-2304
	,-1963
	,-2587
	,-2342
	,-2113
	,-2273
	,-2656
	,-2079
	,-2105
	,-2473
	,-2519
	,-3164
	,-1857
	,-1695
	,-2276
	,-2530
	,-1819
	,-2460
	,-2415
	,-2200
	,-2059
	,-2744
	,-2133
	,-2073
	,-2291
	,-2746
	,-2669
	,-2604
	,-1373
	,-2195
	,-2537
	,-1936
	,-2280
	,-2477
	,-2279
	,-1961
	,-2577
	,-2304
	,-2026
	,-2186
	,-2719
	,-2398
	,-3190
	,-1184
	,-2087
	,-2494
	,-2086
	,-2101
	,-2537
	,-2304
	,-2024
	,-2425
	,-2506
	,-2070
	,-2172
	,-2642
	,-2444
	,-3391
	,-1371
	,-1995
	,-2470
	,-2358
	,-1994
	,-2631
	,-2389
	,-2161
	,-2299
	,-2692
	,-2115
	,-2158
	,-2515
	,-2606
	,-3255
	,-1862
	,-1840
	,-2389
	,-2628
	,-1930
	,-2581
	,-2479
	,-2218
	,-2036
	,-2596
	,-1880
	,-1793
	,-1959
	,-2308
	,-2225
	,-1928
	,-823
	,-1561
	,-1891
	,-1309
	,-1805
	,-2082
	,-2003
	,-1798
	,-2490
	,-2182
	,-1963
	,-2153
	,-2697
	,-2390
	,-3083
	,-1203
	,-2107
	,-2499
	,-2056
	,-2134
	,-2527
	,-2311
	,-2040
	,-2470
	,-2499
	,-2086
	,-2210
	,-2684
	,-2442
	,-3392
	,-1362
	,-2054
	,-2510
	,-2333
	,-2033
	,-2636
	,-2398
	,-2177
	,-2359
	,-2696
	,-2133
	,-2191
	,-2568
	,-2599
	,-3295
	,-1774
	,-1884
	,-2404
	,-2598
	,-1939
	,-2619
	,-2523
	,-2320
	,-2266
	,-2894
	,-2254
	,-2294
	,-2538
	,-2919
	,-2991
	,-2595
	,-1735
	,-2442
	,-2765
	,-2110
	,-2550
	,-2662
	,-2483
	,-2204
	,-2849
	,-2453
	,-2243
	,-2431
	,-2953
	,-2639
	,-3203
	,-1427
	,-2318
	,-2683
	,-2212
	,-2322
	,-2663
	,-2446
	,-2157
	,-2623
	,-2596
	,-2198
	,-2326
	,-2803
	,-2519
	,-3453
	,-1414
	,-2152
	,-2583
	,-2372
	,-2125
	,-2671
	,-2436
	,-2196
	,-2426
	,-2723
	,-2178
	,-2246
	,-2628
	,-2595
	,-3343
	,-1710
	,-1936
	,-2417
	,-2558
	,-1931
	,-2590
	,-2455
	,-2231
	,-2203
	,-2774
	,-2136
	,-2166
	,-2420
	,-2737
	,-2894
	,-2298
	,-1605
	,-2257
	,-2577
	,-1914
	,-2391
	,-2469
	,-2280
	,-2026
	,-2683
	,-2229
	,-2083
	,-2278
	,-2770
	,-2478
	,-2937
	,-1287
	,-2168
	,-2522
	,-2021
	,-2189
	,-2506
	,-2307
	,-2020
	,-2501
	,-2414
	,-2042
	,-2186
	,-2677
	,-2377
	,-3265
	,-1259
	,-2041
	,-2461
	,-2221
	,-2028
	,-2543
	,-2319
	,-2072
	,-2337
	,-2573
	,-2056
	,-2142
	,-2541
	,-2445
	,-3262
	,-1533
	,-1863
	,-2338
	,-2448
	,-1874
	,-2518
	,-2352
	,-2136
	,-2141
	,-2661
	,-2027
	,-2083
	,-2354
	,-2600
	,-2846
	,-2069
	,-1571
	,-2188
	,-2490
	,-1806
	,-2330
	,-2389
	,-2200
	,-1979
	,-2632
	,-2133
	,-2030
	,-2230
	,-2706
	,-2467
	,-2820
	,-1289
	,-2141
	,-2488
	,-1975
	,-2188
	,-2472
	,-2282
	,-1987
	,-2511
	,-2372
	,-2032
	,-2195
	,-2689
	,-2363
	,-3224
	,-1255
	,-2071
	,-2466
	,-2184
	,-2052
	,-2529
	,-2310
	,-2049
	,-2356
	,-2535
	,-2048
	,-2148
	,-2561
	,-2425
	,-3293
	,-1498
	,-1905
	,-2359
	,-2388
	,-1879
	,-2520
	,-2330
	,-2135
	,-2189
	,-2683
	,-2066
	,-2126
	,-2412
	,-2602
	,-2959
	,-2016
	,-1689
	,-2261
	,-2573
	,-1885
	,-2430
	,-2441
	,-2252
	,-2071
	,-2721
	,-2166
	,-2117
	,-2324
	,-2768
	,-2565
	,-2756
	,-1395
	,-2221
	,-2547
	,-2001
	,-2258
	,-2500
	,-2320
	,-2034
	,-2569
	,-2361
	,-2053
	,-2225
	,-2726
	,-2312
	,-3263
	,-1262
	,-2053
	,-2448
	,-2200
	,-2034
	,-2523
	,-2298
	,-2063
	,-2336
	,-2533
	,-2030
	,-2142
	,-2538
	,-2407
	,-3240
	,-1503
	,-1874
	,-2324
	,-2407
	,-1873
	,-2507
	,-2329
	,-2133
	,-2168
	,-2661
	,-2033
	,-2103
	,-2384
	,-2597
	,-2889
	,-2044
	,-1647
	,-2228
	,-2519
	,-1836
	,-2371
	,-2397
	,-2216
	,-2024
	,-2662
	,-2120
	,-2045
	,-2261
	,-2731
	,-2493
	,-2749
	,-1333
	,-2156
	,-2490
	,-1979
	,-2201
	,-2438
	,-2260
	,-2002
	,-2526
	,-2349
	,-2040
	,-2215
	,-2685
	,-2317
	,-3184
	,-1260
	,-2082
	,-2465
	,-2177
	,-2072
	,-2531
	,-2320
	,-2082
	,-2391
	,-2537
	,-2059
	,-2195
	,-2601
	,-2429
	,-3269
	,-1492
	,-1956
	,-2379
	,-2400
	,-1925
	,-2550
	,-2364
	,-2186
	,-2262
	,-2713
	,-2121
	,-2212
	,-2525
	,-2660
	,-3036
	,-1968
	,-1616
	,-2048
	,-2265
	,-1504
	,-1993
	,-1919
	,-1655
	,-1425
	,-2003
	,-1405
	,-1412
	,-1697
	,-2225
	,-2159
	,-2373
	,-1219
	,-2051
	,-2393
	,-1869
	,-2147
	,-2370
	,-2203
	,-1934
	,-2492
	,-2271
	,-2007
	,-2206
	,-2687
	,-2311
	,-3124
	,-1253
	,-2094
	,-2470
	,-2153
	,-2104
	,-2517
	,-2325
	,-2096
	,-2451
	,-2552
	,-2085
	,-2226
	,-2662
	,-2469
	,-3325
	,-1510
	,-2042
	,-2449
	,-2405
	,-1993
	,-2586
	,-2378
	,-2207
	,-2315
	,-2707
	,-2128
	,-2232
	,-2562
	,-2647
	,-3155
	,-2001
	,-1920
	,-2422
	,-2711
	,-2040
	,-2629
	,-2596
	,-2414
	,-2300
	,-2912
	,-2304
	,-2329
	,-2556
	,-2953
	,-2822
	,-2778
	,-1705
	,-2439
	,-2762
	,-2194
	,-2512
	,-2664
	,-2507
	,-2239
	,-2814
	,-2520
	,-2264
	,-2465
	,-2946
	,-2562
	,-3273
	,-1491
	,-2320
	,-2669
	,-2309
	,-2298
	,-2673
	,-2471
	,-2221
	,-2595
	,-2633
	,-2203
	,-2369
	,-2786
	,-2531
	,-3425
	,-1570
	,-2168
	,-2558
	,-2483
	,-2124
	,-2686
	,-2471
	,-2277
	,-2419
	,-2762
	,-2189
	,-2293
	,-2627
	,-2642
	,-3201
	,-1909
	,-1952
	,-2395
	,-2626
	,-1951
	,-2549
	,-2473
	,-2270
	,-2178
	,-2760
	,-2121
	,-2167
	,-2399
	,-2757
	,-2704
	,-2491
	,-1579
	,-2229
	,-2535
	,-1951
	,-2307
	,-2423
	,-2282
	,-2030
	,-2613
	,-2251
	,-2055
	,-2268
	,-2741
	,-2368
	,-2992
	,-1316
	,-2150
	,-2482
	,-2100
	,-2138
	,-2474
	,-2292
	,-2048
	,-2447
	,-2428
	,-2043
	,-2219
	,-2632
	,-2328
	,-3217
	,-1375
	,-2031
	,-2401
	,-2267
	,-1974
	,-2498
	,-2290
	,-2108
	,-2280
	,-2556
	,-2014
	,-2130
	,-2479
	,-2450
	,-3083
	,-1676
	,-1826
	,-2242
	,-2436
	,-1804
	,-2403
	,-2287
	,-2116
	,-2068
	,-2617
	,-1979
	,-2066
	,-2292
	,-2575
	,-2610
	,-2238
	,-1533
	,-2151
	,-2461
	,-1851
	,-2259
	,-2346
	,-2206
	,-1976
	,-2566
	,-2151
	,-1995
	,-2215
	,-2684
	,-2325
	,-2862
	,-1286
	,-2103
	,-2428
	,-2008
	,-2109
	,-2407
	,-2235
	,-1999
	,-2429
	,-2357
	,-1983
	,-2172
	,-2598
	,-2276
	,-3145
	,-1307
	,-2012
	,-2371
	,-2186
	,-1957
	,-2441
	,-2239
	,-2044
	,-2261
	,-2507
	,-1980
	,-2104
	,-2465
	,-2388
	,-3080
	,-1575
	,-1836
	,-2239
	,-2400
	,-1817
	,-2419
	,-2286
	,-2109
	,-2109
	,-2625
	,-2004
	,-2103
	,-2351
	,-2608
	,-2653
	,-2364
	,-1566
	,-2187
	,-2496
	,-1905
	,-2288
	,-2384
	,-2233
	,-2004
	,-2602
	,-2203
	,-2030
	,-2252
	,-2715
	,-2343
	,-2915
	,-1310
	,-2129
	,-2451
	,-2054
	,-2123
	,-2441
	,-2258
	,-2024
	,-2424
	,-2365
	,-1977
	,-2176
	,-2600
	,-2281
	,-3159
	,-1312
	,-1993
	,-2352
	,-2206
	,-1951
	,-2460
	,-2245
	,-2049
	,-2260
	,-2519
	,-1982
	,-2116
	,-2470
	,-2394
	,-3073
	,-1628
	,-1847
	,-2248
	,-2422
	,-1820
	,-2424
	,-2298
	,-2125
	,-2103
	,-2627
	,-1982
	,-2060
	,-2321
	,-2611
	,-2686
	,-2198
	,-1578
	,-2146
	,-2454
	,-1846
	,-2268
	,-2323
	,-2187
	,-1979
	,-2569
	,-2112
	,-2018
	,-2232
	,-2671
	,-2320
	,-2813
	,-1310
	,-2118
	,-2430
	,-2000
	,-2124
	,-2387
	,-2227
	,-1996
	,-2422
	,-2305
	,-1950
	,-2158
	,-2595
	,-2254
	,-3094
	,-1277
	,-2006
	,-2349
	,-2168
	,-1958
	,-2431
	,-2233
	,-2042
	,-2274
	,-2490
	,-1961
	,-2098
	,-2472
	,-2376
	,-3088
	,-1561
	,-1871
	,-2260
	,-2382
	,-1830
	,-2417
	,-2264
	,-2114
	,-2126
	,-2606
	,-1983
	,-2103
	,-2352
	,-2563
	,-2738
	,-2091
	,-1630
	,-2165
	,-2479
	,-1848
	,-2305
	,-2342
	,-2185
	,-2000
	,-2613
	,-2108
	,-2026
	,-2252
	,-2677
	,-2375
	,-2753
	,-1367
	,-2149
	,-2458
	,-1991
	,-2173
	,-2432
	,-2264
	,-2024
	,-2495
	,-2336
	,-2014
	,-2226
	,-2668
	,-2304
	,-3121
	,-1318
	,-2060
	,-2404
	,-2187
	,-2050
	,-2498
	,-2315
	,-2134
	,-2413
	,-2562
	,-2060
	,-2182
	,-2454
	,-2169
	,-2853
	,-1176
	,-1496
	,-1803
	,-1794
	,-1221
	,-1729
	,-1502
	,-1335
	,-1428
	,-1947
	,-1452
	,-1680
	,-2066
	,-2330
	,-2646
	,-1841
	,-1545
	,-2047
	,-2359
	,-1725
	,-2232
	,-2240
	,-2110
	,-1964
	,-2566
	,-2017
	,-2018
	,-2233
	,-2638
	,-2384
	,-2642
	,-1384
	,-2137
	,-2456
	,-1990
	,-2204
	,-2423
	,-2266
	,-2025
	,-2523
	,-2318
	,-2011
	,-2235
	,-2670
	,-2278
	,-3076
	,-1304
	,-2080
	,-2405
	,-2134
	,-2039
	,-2462
	,-2272
	,-2066
	,-2377
	,-2488
	,-2038
	,-2227
	,-2629
	,-2435
	,-3240
	,-1583
	,-2067
	,-2435
	,-2491
	,-2044
	,-2615
	,-2434
	,-2295
	,-2366
	,-2762
	,-2170
	,-2292
	,-2596
	,-2700
	,-3081
	,-2125
	,-1938
	,-2387
	,-2674
	,-2018
	,-2548
	,-2509
	,-2349
	,-2223
	,-2800
	,-2206
	,-2246
	,-2455
	,-2815
	,-2607
	,-2722
	,-1586
	,-2293
	,-2597
	,-2096
	,-2347
	,-2524
	,-2367
	,-2128
	,-2651
	,-2390
	,-2131
	,-2354
	,-2794
	,-2394
	,-3161
	,-1446
	,-2229
	,-2543
	,-2245
	,-2189
	,-2553
	,-2367
	,-2155
	,-2480
	,-2545
	,-2094
	,-2274
	,-2647
	,-2401
	,-3196
	,-1492
	,-2024
	,-2365
	,-2345
	,-1940
	,-2495
	,-2287
	,-2112
	,-2220
	,-2575
	,-1995
	,-2117
	,-2423
	,-2478
	,-2915
	,-1825
	,-1764
	,-2184
	,-2453
	,-1798
	,-2354
	,-2292
	,-2131
	,-2036
	,-2615
	,-1997
	,-2065
	,-2285
	,-2628
	,-2483
	,-2454
	,-1480
	,-2142
	,-2444
	,-1901
	,-2210
	,-2358
	,-2220
	,-1981
	,-2527
	,-2214
	,-1983
	,-2207
	,-2668
	,-2272
	,-2965
	,-1287
	,-2070
	,-2381
	,-2047
	,-2042
	,-2385
	,-2196
	,-1969
	,-2326
	,-2336
	,-1914
	,-2109
	,-2496
	,-2169
	,-3076
	,-1369
	,-1878
	,-2266
	,-2352
	,-1659
	,-2205
	,-2443
	,-2065
	,-1964
	,-2372
	,-2176
	,-1983
	,-2192
	,-2386
	,-2948
	,-1816
	,-1714
	,-2144
	,-2610
	,-1621
	,-2164
	,-2408
	,-2297
	,-1846
	,-2405
	,-2209
	,-2065
	,-2088
	,-2469
	,-2582
	,-2474
	,-1422
	,-2093
	,-2539
	,-1817
	,-2010
	,-2314
	,-2453
	,-1797
	,-2311
	,-2284
	,-2129
	,-2002
	,-2443
	,-2371
	,-2943
	,-1252
	,-2038
	,-2439
	,-2053
	,-1861
	,-2292
	,-2465
	,-1908
	,-2164
	,-2336
	,-2181
	,-1953
	,-2352
	,-2326
	,-3124
	,-1359
	,-1921
	,-2302
	,-2333
	,-1712
	,-2232
	,-2467
	,-2072
	,-2023
	,-2391
	,-2210
	,-2025
	,-2244
	,-2401
	,-3037
	,-1779
	,-1769
	,-2176
	,-2618
	,-1630
	,-2207
	,-2443
	,-2291
	,-1889
	,-2447
	,-2242
	,-2089
	,-2129
	,-2490
	,-2649
	,-2410
	,-1493
	,-2124
	,-2581
	,-1812
	,-2061
	,-2355
	,-2478
	,-1819
	,-2366
	,-2317
	,-2155
	,-2048
	,-2468
	,-2399
	,-2931
	,-1277
	,-2068
	,-2473
	,-2039
	,-1905
	,-2309
	,-2483
	,-1915
	,-2199
	,-2327
	,-2199
	,-1978
	,-2375
	,-2312
	,-3127
	,-1331
	,-1949
	,-2330
	,-2307
	,-1742
	,-2242
	,-2476
	,-2049
	,-2044
	,-2387
	,-2205
	,-2008
	,-2247
	,-2342
	,-3046
	,-1670
	,-1773
	,-2170
	,-2580
	,-1604
	,-2184
	,-2414
	,-2248
	,-1895
	,-2427
	,-2215
	,-2053
	,-2119
	,-2475
	,-2675
	,-2268
	,-1510
	,-2101
	,-2561
	,-1744
	,-2058
	,-2343
	,-2426
	,-1778
	,-2339
	,-2248
	,-2100
	,-2026
	,-2451
	,-2411
	,-2828
	,-1273
	,-2062
	,-2471
	,-1987
	,-1905
	,-2299
	,-2467
	,-1876
	,-2214
	,-2324
	,-2190
	,-1967
	,-2384
	,-2299
	,-3113
	,-1303
	,-1969
	,-2350
	,-2244
	,-1762
	,-2248
	,-2474
	,-2016
	,-2059
	,-2367
	,-2190
	,-1990
	,-2271
	,-2342
	,-3060
	,-1588
	,-1809
	,-2192
	,-2550
	,-1626
	,-2203
	,-2445
	,-2197
	,-1907
	,-2404
	,-2195
	,-2046
	,-2135
	,-2446
	,-2740
	,-2170
	,-1560
	,-2111
	,-2583
	,-1715
	,-2080
	,-2347
	,-2410
	,-1795
	,-2361
	,-2246
	,-2107
	,-2041
	,-2445
	,-2427
	,-2755
	,-1294
	,-2070
	,-2478
	,-1940
	,-1927
	,-2309
	,-2460
	,-1853
	,-2222
	,-2305
	,-2164
	,-1959
	,-2396
	,-2326
	,-3071
	,-1277
	,-1981
	,-2368
	,-2213
	,-1785
	,-2249
	,-2472
	,-1997
	,-2086
	,-2355
	,-2189
	,-1981
	,-2287
	,-2334
	,-3127
	,-1581
	,-1893
	,-2288
	,-2594
	,-1724
	,-2281
	,-2490
	,-2194
	,-1869
	,-2244
	,-1936
	,-1676
	,-1726
	,-1962
	,-2222
	,-1413
	,-892
	,-1357
	,-1815
	,-947
	,-1456
	,-1840
	,-1962
	,-1483
	,-2160
	,-2064
	,-1934
	,-1918
	,-2338
	,-2359
	,-2585
	,-1246
	,-2015
	,-2445
	,-1859
	,-1915
	,-2286
	,-2445
	,-1830
	,-2241
	,-2292
	,-2173
	,-1989
	,-2432
	,-2369
	,-3091
	,-1311
	,-2035
	,-2426
	,-2216
	,-1845
	,-2291
	,-2492
	,-1990
	,-2119
	,-2370
	,-2201
	,-1986
	,-2299
	,-2295
	,-3113
	,-1483
	,-1857
	,-2244
	,-2483
	,-1681
	,-2247
	,-2497
	,-2221
	,-2032
	,-2489
	,-2295
	,-2131
	,-2276
	,-2530
	,-2961
	,-2083
	,-1772
	,-2256
	,-2735
	,-1786
	,-2273
	,-2541
	,-2504
	,-1967
	,-2551
	,-2393
	,-2251
	,-2238
	,-2626
	,-2583
	,-2908
	,-1467
	,-2230
	,-2639
	,-2073
	,-2078
	,-2446
	,-2585
	,-1978
	,-2365
	,-2426
	,-2275
	,-2078
	,-2517
	,-2440
	,-3166
	,-1369
	,-2082
	,-2468
	,-2287
	,-1893
	,-2350
	,-2559
	,-2080
	,-2191
	,-2455
	,-2287
	,-2082
	,-2396
	,-2414
	,-3213
	,-1617
	,-1947
	,-2320
	,-2576
	,-1728
	,-2284
	,-2506
	,-2234
	,-2008
	,-2449
	,-2234
	,-2073
	,-2186
	,-2452
	,-2822
	,-2012
	,-1621
	,-2110
	,-2573
	,-1640
	,-2092
	,-2344
	,-2338
	,-1772
	,-2336
	,-2173
	,-2021
	,-2003
	,-2428
	,-2449
	,-2604
	,-1288
	,-2023
	,-2444
	,-1840
	,-1910
	,-2259
	,-2407
	,-1776
	,-2219
	,-2255
	,-2104
	,-1934
	,-2380
	,-2287
	,-3020
	,-1221
	,-1970
	,-2363
	,-2103
	,-1774
	,-2222
	,-2420
	,-1922
	,-2075
	,-2320
	,-2153
	,-1943
	,-2269
	,-2272
	,-3059
	,-1392
	,-1803
	,-2187
	,-2346
	,-1581
	,-2138
	,-2365
	,-2026
	,-1867
	,-2307
	,-2096
	,-1923
	,-2075
	,-2297
	,-2765
	,-1805
	,-1548
	,-2015
	,-2484
	,-1518
	,-2026
	,-2281
	,-2222
	,-1716
	,-2300
	,-2124
	,-1983
	,-1979
	,-2393
	,-2451
	,-2493
	,-1282
	,-2001
	,-2430
	,-1769
	,-1893
	,-2220
	,-2350
	,-1699
	,-2181
	,-2194
	,-2040
	,-1892
	,-2330
	,-2236
	,-2927
	,-1135
	,-1914
	,-2316
	,-1994
	,-1737
	,-2177
	,-2356
	,-1826
	,-2038
	,-2251
	,-2087
	,-1872
	,-2234
	,-2211
	,-3031
	,-1290
	,-1782
	,-2173
	,-2287
	,-1579
	,-2115
	,-2342
	,-1975
	,-1863
	,-2276
	,-2073
	,-1891
	,-2078
	,-2251
	,-2827
	,-1705
	,-1560
	,-2009
	,-2477
	,-1488
	,-2038
	,-2278
	,-2176
	,-1719
	,-2297
	,-2103
	,-1972
	,-1989
	,-2385
	,-2482
	,-2386
	,-1303
	,-2005
	,-2446
	,-1728
	,-1925
	,-2262
	,-2358
	,-1695
	,-2219
	,-2200
	,-2027
	,-1898
	,-2354
	,-2285
	,-2873
	,-1127
	,-1927
	,-2338
	,-1963
	,-1757
	,-2188
	,-2351
	,-1787
	,-2046
	,-2236
	,-2067
	,-1836
	,-2225
	,-2174
	,-3041
	,-1209
	,-1770
	,-2173
	,-2194
	,-1566
	,-2100
	,-2317
	,-1924
	,-1865
	,-2256
	,-2059
	,-1866
	,-2084
	,-2235
	,-2876
	,-1600
	,-1581
	,-2019
	,-2439
	,-1448
	,-2040
	,-2271
	,-2109
	,-1705
	,-2280
	,-2056
	,-1896
	,-1943
	,-2354
	,-2501
	,-2232
	,-1278
	,-1944
	,-2392
	,-1626
	,-1882
	,-2186
	,-2280
	,-1618
	,-2185
	,-2127
	,-1949
	,-1847
	,-2289
	,-2225
	,-2784
	,-1056
	,-1880
	,-2302
	,-1848
	,-1725
	,-2148
	,-2298
	,-1721
	,-2022
	,-2166
	,-2010
	,-1777
	,-2190
	,-2137
	,-2981
	,-1118
	,-1747
	,-2166
	,-2114
	,-1553
	,-2087
	,-2289
	,-1850
	,-1852
	,-2223
	,-2024
	,-1818
	,-2073
	,-2182
	,-2911
	,-1477
	,-1571
	,-2014
	,-2390
	,-1422
	,-2039
	,-2263
	,-2042
	,-1705
	,-2268
	,-2034
	,-1869
	,-1948
	,-2333
	,-2543
	,-2112
	,-1303
	,-1940
	,-2397
	,-1564
	,-1889
	,-2181
	,-2232
	,-1580
	,-2184
	,-2103
	,-1920
	,-1838
	,-2297
	,-2257
	,-2698
	,-1046
	,-1877
	,-2311
	,-1782
	,-1742
	,-2172
	,-2290
	,-1689
	,-2050
	,-2185
	,-2005
	,-1774
	,-2238
	,-2196
	,-3007
	,-1092
	,-1779
	,-2219
	,-2097
	,-1636
	,-2177
	,-2378
	,-1919
	,-1982
	,-2328
	,-2087
	,-1813
	,-2049
	,-2022
	,-2705
	,-1187
	,-1140
	,-1529
	,-1842
	,-791
	,-1345
	,-1514
	,-1323
	,-1002
	,-1667
	,-1544
	,-1487
	,-1651
	,-2129
	,-2344
	,-1994
	,-1119
	,-1802
	,-2257
	,-1446
	,-1780
	,-2089
	,-2155
	,-1517
	,-2127
	,-2057
	,-1867
	,-1790
	,-2275
	,-2240
	,-2734
};

MainWindow::MainWindow(QWidget *parent) :
	QMainWindow(parent),
	ui(new Ui::MainWindow)
{
	ui->setupUi(this);

	Para_Init();

	connect(this->ui->port_name_Comb,SIGNAL(currentIndexChanged(const QString)),this,SLOT(sel_portName(QString)));
	connect(this->ui->baud_rate_Comb,SIGNAL(currentIndexChanged(int)),			this,SLOT(set_BaudRate(int)));
	connect(this->ui->stop_bits_Comb,SIGNAL(currentIndexChanged(int)),			this,SLOT(set_stopBits(int)));
	connect(this->ui->data_bits_Comb,SIGNAL(currentIndexChanged(int)),			this,SLOT(set_dataBits(int)));
	connect(this->ui->parity_Comb,   SIGNAL(currentIndexChanged(int)),			this,SLOT(set_Parity(int)));
	connect(this->ui->open_port_Btn, SIGNAL(clicked()),							this,SLOT(open_Port()));
	connect(this->ui->close_port_Btn,SIGNAL(clicked()),							this,SLOT(close_Port()));
	connect(this->ui->send_Btn,SIGNAL(clicked()),							this,SLOT(send_Data()));
	connect(this->ui->refresh_Time,  SIGNAL(valueChanged(int)),				this,SLOT(get_refresh_Timeout(int)));
	connect(this->ui->filter_Combo,  SIGNAL(currentIndexChanged(int)),		this,SLOT(set_Filter(int)));
	connect(this->ui->leve_In,		 SIGNAL(valueChanged(int)),				this,SLOT(set_Level(int)));

	//connect timer function
	connect(this->check_port_Timer,SIGNAL(timeout()),this,SLOT(check_port_Status()));
	connect(this->test_timer,      SIGNAL(timeout()),this,SLOT(test_timer_func()));
	//com port receive data signal has already connected in open_port()
	//connect signal to enable atuo-scroll in info panel
	connect(this->ui->info_Panel,SIGNAL(cursorPositionChanged()),this,SLOT(info_Panel_Scroll()));
	//connect user defined function
	connect(this,SIGNAL(get_data_Done(double)),this,SLOT(pass_Dot(double)));
	//connect sliderbar
	connect(this->ui->num_points_Slider,SIGNAL(valueChanged(int)),this,SLOT(change_X_Scope(int)));
	connect(this->ui->y_pos_Scope,SIGNAL(valueChanged(int)),this,SLOT(change_Y_pos_Scope(int)));
	connect(this->ui->y_neg_Scope,SIGNAL(valueChanged(int)),this,SLOT(change_Y_neg_Scope(int)));

	//connect screen shot and save data function
	connect(this->ui->screen_shot_Btn,SIGNAL(clicked()),this,SLOT(snip_Screen()));
	connect(this->ui->save_data_Btn,  SIGNAL(toggled(bool)),this,SLOT(check_save_Data(bool)));
	
}

MainWindow::~MainWindow()
{
	//stop timer first
	check_port_Timer->stop();
	delete check_port_Timer;

	if (myCom!=NULL)
	{
		delete myCom;
	}

	delete plot_view;
}



void MainWindow::Para_Init()
{
	point_cnt = 100;
	plot_view = new QwtPlotView(this->ui->qwtPlot);

	check_port_Timer = new QTimer(this);
	test_timer = new QTimer(this);
	test_timer->start(2);
	test_timer_cnt = 0;
	this->data_text = NULL;

	//start timer here
	check_port_Timer->start(500);
	this->ui->refresh_Time->setRange(0,1000);
	this->ui->refresh_Time->setValue(10);

	comName = "com1";
	myComSetting.BaudRate = BAUD9600;
	myComSetting.DataBits = DATA_8;
	myComSetting.Parity   = PAR_NONE;
	myComSetting.FlowControl = FLOW_OFF;
	myComSetting.StopBits = STOP_1;
	myComSetting.Timeout_Millisec = 50;

	myCom = NULL;//new Win_QextSerialPort(comName,myComSetting,QextSerialBase::EventDriven);

	//setup slider bar
	this->ui->num_points_Slider->setMinimum(100);
	this->ui->num_points_Slider->setMaximum(2000);
	this->ui->num_points_Slider->setTickInterval(100);

	//setup y scope bar
	this->ui->y_pos_Scope->setMinimum(-100);
	this->ui->y_pos_Scope->setMaximum(2000);
	this->ui->y_pos_Scope->setSliderPosition(2);
	this->ui->y_neg_Scope->setMinimum(-2000);
	this->ui->y_neg_Scope->setMaximum(100);
	this->ui->y_neg_Scope->setSliderPosition(-2);

	//filter ui
	this->ui->leve_In->setValue(5);
	this->ui->leve_In->setMaximum(10);
	this->ui->leve_In->setMinimum(1);
	this->ui->filter_Combo->setCurrentIndex(0);

	//--------------init signal process parameters------------//
	long_length = 100;
	signal_init[30];
	memset(signal_init,0,30*sizeof(double));
	signal_len = 30;
	de_level = 5;
	filter_name = 0;
	memset(coeff,0,10*sizeof(WaveCoeff));
	memset(recon,0,10*sizeof(WaveCoeff));
}

//receive data and do wavelet decompose and reconstruct 
//emit a signal and pass data to plot in chart view
void MainWindow::receive_Data()
{
	if (myCom->bytesAvailable()>=10)
	{
		QByteArray temp = myCom->readAll();
		com_temp.append(temp);
		while (com_temp.contains("a"))
		{
			QByteArray right_temp = com_temp.left(com_temp.indexOf("a"));
			com_temp.remove(0,right_temp.size()+1);
			double tem_num = right_temp.toDouble();
			//this->ui->info_Panel->insertPlainText(QString::number(tem_num));
			//this->ui->info_Panel->insertPlainText("\n");
			//this line emit a signal to trigger pass_Dot
			emit get_data_Done(tem_num);
		}
	}
}


//trigger by receive_data 
//pass data to buff
void MainWindow::pass_Dot(double in_data)
{
	double means = 0.0;
	//process data first
	for (int j=0;j<signal_len-1;j++)
	{
		signal_init[j] = signal_init[j+1];
		means = means+signal_init[j+1];
	}

	signal_init[signal_len-1] = in_data;
	means = means+in_data;
	means = means/signal_len;

	//de-means
	for (int j=0;j<signal_len;j++)
	{
		signal_init[j] =signal_init[j]-means; 
	}

	if (this->ui->en_filter_Btn->isChecked())
	{
		//----------do transform---------------//
		switch(filter_name)
		{
		case 0: //db4
			{
				WaveDecompose(signal_init,signal_len,db4_Lo_D,db4_len,db4_Hi_D,db4_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,db4_Lo_R,db4_len,db4_Hi_R,db4_len,coeff,recon,'a',de_level);
				break;
			}
		case 1: //db5
			{
				WaveDecompose(signal_init,signal_len,db5_Lo_D,db5_len,db4_Hi_D,db5_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,db5_Lo_R,db5_len,db4_Hi_R,db5_len,coeff,recon,'a',de_level);
				break;
			}
		case 2: //db6
			{
				WaveDecompose(signal_init,signal_len,db6_Lo_D,db6_len,db6_Hi_D,db6_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,db6_Lo_R,db6_len,db6_Hi_R,db6_len,coeff,recon,'a',de_level);
				break;
			}
		case 3: //sym4
			{
				WaveDecompose(signal_init,signal_len,sym4_Lo_D,sym4_len,sym4_Hi_D,sym4_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,sym4_Lo_R,sym4_len,sym4_Hi_R,sym4_len,coeff,recon,'a',de_level);
				break;
			}
		case 4: //sym5
			{
				WaveDecompose(signal_init,signal_len,sym5_Lo_D,sym5_len,sym5_Hi_D,sym5_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,sym5_Lo_R,sym5_len,sym5_Hi_R,sym5_len,coeff,recon,'a',de_level);
				break;
			}
		case 5: //sym6
			{
				WaveDecompose(signal_init,signal_len,sym6_Lo_D,sym6_len,sym6_Hi_D,sym6_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,sym6_Lo_R,sym6_len,sym6_Hi_R,sym6_len,coeff,recon,'a',de_level);
				break;
			}
		case 6: //coif4
			{
				WaveDecompose(signal_init,signal_len,coif4_Lo_D,coif4_len,coif4_Hi_D,coif4_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,coif4_Lo_R,coif4_len,coif4_Hi_R,coif4_len,coeff,recon,'a',de_level);
				break;
			}
		case 7: //coif5
			{
				WaveDecompose(signal_init,signal_len,coif5_Lo_D,coif5_len,coif5_Hi_D,coif5_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,coif5_Lo_R,coif5_len,coif5_Hi_R,coif5_len,coeff,recon,'a',de_level);
				break;
			}
		default: //db4
			{
				WaveDecompose(signal_init,signal_len,db4_Lo_D,db4_len,db4_Hi_D,db4_len,coeff,de_level);
				WaveReconstruct(signal_init,signal_len,db4_Lo_R,db4_len,db4_Hi_R,db4_len,coeff,recon,'a',de_level);
				break;
			}
		}
		means = 0;
		for (int j=0;j<signal_len;j++)
		{
			means = means+signal_init[j]; 
		}
		this->plot_view->pass_Dot(recon[0].capp[signal_len-10]-means/signal_len);
	}
	else
	{
		this->plot_view->pass_Dot(signal_init[signal_len-1]);
	}
	//std::cout<<in_data<<std::endl;
}

void MainWindow::send_Data()
{
	if (myCom == NULL)
		return;
	else
	{
		if (!myCom->isOpen())
		{
			QMessageBox::warning(NULL,"warning","Com Port no open",QMessageBox::Yes);
			return;
		}
	}

	QString temp = this->ui->send_Panel->toPlainText();

	//send data
	myCom->write(temp.toAscii());

	//clear data in send panel
	this->ui->send_Panel->clear();
}


void MainWindow::find_Port()
{
	//myCom->close();
}


void MainWindow::open_Port()
{
	//create new com port
	if (myCom != NULL)
	{
		disconnect(myCom,SIGNAL(readyRead()),this,SLOT(receive_Data()));
		delete myCom;
	}
	myCom = new Win_QextSerialPort(comName,myComSetting,QextSerialBase::EventDriven);

	//open it
	if (!myCom->open(QIODevice::ReadWrite))
	{
		QMessageBox::warning(NULL,"Warning","Cannot Open Port",QMessageBox::Yes);
		return;
	}

	//
	connect(myCom,SIGNAL(readyRead()),this,SLOT(receive_Data()));
}

void MainWindow::close_Port()
{
	if (myCom == NULL)
	{
		return;
	}
	if (myCom->isOpen())
	{
		myCom->close();
	}
}

void MainWindow::sel_portName(QString str)
{
	std::cout<<str.toStdString()<<std::endl;
	comName = str;
}

void MainWindow::set_BaudRate(int index)
{
	switch (index)
	{
	case 0:
		{
			myComSetting.BaudRate = BAUD9600;
			break;
		}
	case 1:
		{
			myComSetting.BaudRate = BAUD19200;
			break;
		}
	case 2:
		{
			myComSetting.BaudRate = BAUD115200;
			break;
		}
	case 3:
		{
			myComSetting.BaudRate = BAUD300;
			break;
		}
	case 4:
		{
			myComSetting.BaudRate = BAUD600;
			break;
		}
	case 5:
		{
			myComSetting.BaudRate = BAUD1200;
			break;
		}
	case 6:
		{
			myComSetting.BaudRate = BAUD2400;
			break;
		}
	case 7:
		{
			myComSetting.BaudRate = BAUD4800;
			break;
		}
	default:
		break;
	}
}

void MainWindow::set_Parity(int index)
{
	switch (index)
	{
	case 0:
		{
			myComSetting.Parity = PAR_NONE;
			break;
		}
	case 1:
		{
			myComSetting.Parity = PAR_ODD;
			break;
		}
	case 2:
		{
			myComSetting.Parity = PAR_EVEN;
			break;
		}
	case 3:
		{
			myComSetting.Parity = PAR_MARK;
			break;
		}
	case 4:
		{
			myComSetting.Parity = PAR_SPACE;
			break;
		}
	default:
		break;
	}
}

void MainWindow::set_dataBits(int index)
{
	switch (index)
	{
	case 0:
		{
			myComSetting.DataBits = DATA_8;
			break;
		}
	case 1:
		{
			myComSetting.DataBits = DATA_7;
			break;
		}
	case 2:
		{
			myComSetting.DataBits = DATA_6;
			break;
		}
	case 3:
		{
			myComSetting.DataBits = DATA_5;
			break;
		}
	default:
		break;
	}
}

void MainWindow::set_stopBits(int index)
{
	switch (index)
	{
	case 0:
		{
			myComSetting.StopBits = STOP_1;
			break;
		}
	case 1:
		{
			myComSetting.StopBits = STOP_2;
			break;
		}
	case 2:
		{
			myComSetting.StopBits = STOP_1_5;
			break;
		}
	default:
		break;
	}
}

//information scroll in info panel
void MainWindow::info_Panel_Scroll()
{
	QTextCursor text_cursor =  ui->info_Panel->textCursor();
	text_cursor.movePosition(QTextCursor::End);
	ui->info_Panel->setTextCursor(text_cursor);
}

void MainWindow::get_refresh_Timeout(int in)
{
	plot_view->setInterval(in);
}

void MainWindow::check_port_Status()
{
	if (myCom == NULL)
	{
		this->ui->is_Open_Btn->setChecked(Qt::Unchecked);
	}
	else
	{
		if (myCom->isOpen())
		{
			this->ui->is_Open_Btn->setChecked(Qt::Checked);
		}
		else
		{
			this->ui->is_Open_Btn->setChecked(Qt::Unchecked);
		}
	}
	return;
}

void MainWindow::change_X_Scope(int num)
{
	plot_view->change_X_Scope(num);
}

void MainWindow::change_Y_pos_Scope(int pos)
{
	plot_view->change_Y_Scope(pos,this->ui->y_neg_Scope->value());
}

void MainWindow::change_Y_neg_Scope(int neg)
{
	plot_view->change_Y_Scope(this->ui->y_pos_Scope->value(),neg);
}

void MainWindow::test_timer_func()
{
	if (test_timer_cnt>3300)
	{
		test_timer_cnt = 0;
	}
	//double pi = 3.1415926;
	double data_buff = test_data[test_timer_cnt];
	test_timer_cnt++;

	emit get_data_Done(data_buff);

}

void MainWindow::set_Filter(int index)
{
	filter_name = index;
}

void MainWindow::set_Level(int index)
{
	de_level = index;
}

void MainWindow::check_save_Data(bool checked)
{
	if (checked)
	{
		QString filename_data = QDateTime::currentDateTime().toString("yyyyMMddhhmmss");
		filename_data.append(".txt");
		this->data_file.setFileName(filename_data);
		if (this->data_file.isOpen())
			this->data_text = new QTextStream(&data_file);
		else if (data_file.open(QFile::WriteOnly)| (QIODevice::Text))
			this->data_text = new QTextStream(&data_file);

		//disconnect signal and re-connect
		//disconnect(this,SIGNAL(get_data_Done(double)),this,SLOT(pass_Dot(double)));
		connect(this,SIGNAL(get_data_Done(double)),this,SLOT(save_Dot(double)));
	}
	
	else
	{
		qDebug()<<"not checked";
		disconnect(this,SIGNAL(get_data_Done(double)),this,SLOT(save_Dot(double)));
		//connect(this,SIGNAL(get_data_Done(double)),this,SLOT(pass_Dot(double)));

		if (this->data_text == NULL)
		{
			return;
		}
		else
		{
			data_file.close();
			delete this->data_text;
			this->data_text = NULL;
		}
	}
}
void MainWindow::save_Dot(double num)
{
	if (this->data_text == NULL)
	{
		return;	
	}
	else
	{
		*(this->data_text)<<num<<endl;
	}
}
void MainWindow::snip_Screen()
{
	QPixmap screen;
	QString format = "PNG";
	QString filename_screen = QDateTime::currentDateTime().toString("yyyyMMddhhmmss");
	filename_screen.append(".png");
	screen = QPixmap::grabWidget(this->ui->plot_widget);
	screen.save(filename_screen,"PNG");
}


QwtPlotView::QwtPlotView(QwtPlot* plot)
{
	this->plot_view = plot;
	//plot init process
	this->plot_view->setTitle( "ECG Signal" );
	this->plot_view->setCanvasBackground( Qt::white );
	this->plot_view->setAxisScale( QwtPlot::yLeft, -2.0, 2.0 );
	this->plot_view->setAxisScale( QwtPlot::xBottom, 0.0, 100.0 );
	this->plot_view->insertLegend( new QwtLegend() );

	grid = new QwtPlotGrid();
	grid->attach( this->plot_view);

	curve = new QwtPlotCurve();
	//curve->setTitle( "Some Points" );
	curve->setPen( Qt::blue, 2 ),
		curve->setRenderHint( QwtPlotItem::RenderAntialiased, true );

	symbol = new QwtSymbol( QwtSymbol::Ellipse,
		QBrush( Qt::yellow ), QPen( Qt::red, 2 ), QSize( 8, 8 ) );
	//curve->setSymbol( symbol );

	curve->attach( this->plot_view);

	num_points_dis = 100;
	//init points here
	point_coor.length = num_points_dis;
	point_coor.x_val = new double[point_coor.length];
	point_coor.y_val = new double[point_coor.length];
	for (int i=0;i<point_coor.length;i++)
	{
		point_coor.x_val[i]=i;
		point_coor.y_val[i]=0;
	}
	dot_temp = 0.0;
	point_cnt = 0;

	curve->setRawSamples(point_coor.x_val,point_coor.y_val,point_coor.length);

	timer_plot = new QTimer;
	timer_plot->start(1);
	//connect 
	connect(timer_plot,SIGNAL(timeout()),this,SLOT(run()));
}

QwtPlotView::~QwtPlotView()
{
	//disconnect
	this->exit();
	disconnect(timer_plot,SIGNAL(timeout()),this,SLOT(run()));
	//stop timer
	timer_plot->stop();
	delete timer_plot;

	delete curve;
	delete grid;
	delete symbol;

	delete point_coor.x_val;
	delete point_coor.y_val;
}

void QwtPlotView::replot(QPolygonF* new_points)
{
	curve->setSamples( *new_points );
	this->plot_view->replot();
}

//inter refresh frequency
void QwtPlotView::setInterval(int inter)
{
	timer_plot->start(inter);
}

void QwtPlotView::run()
{
	if (point_cnt>this->num_points_dis-1)
	{
		point_cnt = 0;
	}
	point_coor.y_val[point_cnt] = dot_temp;
	point_cnt++;

	this->plot_view->replot();
}

void QwtPlotView::pass_Dot(double d)
{
	dot_temp = d;
}

void QwtPlotView::change_Y_Scope(int pos,int neg)
{
	this->plot_view->setAxisScale( QwtPlot::yLeft,neg ,pos  );
}

void QwtPlotView::change_X_Scope(int xx)
{
	this->num_points_dis = xx;
	point_coor.length = num_points_dis;
	//delete data first
	delete point_coor.x_val;
	delete point_coor.y_val;

	//re-new array
	point_coor.x_val = new double[point_coor.length];
	point_coor.y_val = new double[point_coor.length];
	for (int i=0;i<point_coor.length;i++)
	{
		point_coor.x_val[i]=i;
		point_coor.y_val[i]=0;
	}

	this->plot_view->setAxisScale( QwtPlot::xBottom, 0.0, point_coor.length );
	curve->setRawSamples(point_coor.x_val,point_coor.y_val,point_coor.length);
}


